$colorNames: (
  'gray',
  'red',
  'pink',
  'yellow',
  'orange',
  'purple',
  'deepPurple',
  'indigo',
  'blue',
  'lightblue',
  'cyan',
  'teal',
  'green',
  'lightgreen',
  'lime',
  'brown'
);
$sizes: ('xs', 'sm', 'md', 'lg', 'xl');

@mixin bindSize() {
  $num: 0;
  @each $size in $sizes {
    &.#{$size} {
      gap: calc(0.3rem + 0.1rem * $num);
      padding: 0 calc(8px + 0.25rem * $num);
      height: calc(1.5rem + 0.5rem * $num);
      font-size: calc(0.75rem + 0.125rem * $num);

      & .iconbox {
        $s: calc(1rem + 0.125rem * $num);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: $s;
        height: $s;
        & > * {
          width: 100%;
          height: 100%;
        }
      }
    }
    $num: $num + 1;
  }
}

@mixin bindColor($btn-num, $hover-num) {
  @each $colorName in $colorNames {
    $color: var(--#{$colorName}-#{$btn-num});

    &.#{$colorName} {
      &.solid {
        border: 0px;
        color: var(--background-default);
        background-color: $color;

        $color-hover: var(--#{$colorName}-#{$hover-num});
        &:not(:disabled):hover {
          background-color: $color-hover;
        }
      }

      &.outline {
        border: 1px solid $color;
        color: $color;

        $color-hover: var(--#{$colorName}-#{$hover-num});
        &:not(:disabled):hover {
          border-color: $color-hover;
        }
      }

      &.ghost {
        border: 0px;
        color: $color;

        $color-hover: var(--#{$colorName}-#{$hover-num});
        &:not(:disabled):hover {
          color: $color-hover;
        }
      }
    }
  }
}

.main {
  margin: 0.3rem;
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;

  font-family: var(--main-font);
  font-weight: 600;
  color: var(--text-primary);

  outline: transparent solid 2px;
  border-radius: 4px;
  cursor: pointer;

  transition: ease all 0.1s;

  @include bindSize();
  @include bindColor(600, 800);

  & {
    $color: var(--text-primary);
    &.solid {
      border: 0px;
      color: var(--background-default);
      background-color: $color;
    }

    &.outline {
      border: 1px solid $color;
      color: $color;
    }

    &.ghost {
      border: 0px;
      color: $color;
    }
  }
}

html:not([data-theme-mode='dark']) {
  .main {
    &.outline,
    &.ghost {
      box-shadow: none;
      &:not(:disabled):hover {
        background-color: rgba(0, 0, 0, 0.02);
      }
      &:not(:disabled):active {
        background-color: rgba(0, 0, 0, 0.04);
      }
    }
  }
}

html[data-theme-mode='dark'] {
  .main {
    @include bindColor(400, 300);
  }
}

.main:disabled {
  cursor: default;
  box-shadow: none;

  $text: var(--button-disabled);
  $bg: var(--button-disabled-background);

  &.solid {
    border: 0px;
    color: $text;
    background-color: $bg;
  }

  &.outline {
    color: $text;
    border-color: $text;
  }

  &.ghost {
    color: $text;
  }
}
