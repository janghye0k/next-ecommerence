@use '@/scss/helpers/color';

@each $color in color.$colors {
  $light: color.getColor($color, 600);
  $dark: color.getColor($color, 300);
  .#{$color} {
    &,
    &.light {
      color: $light;
      background-color: var(--#{$color}-50);
    }

    &.filled {
      &,
      & .content {
        color: var(--background-default);
      }
      background-color: $light;
    }

    &.outline {
      border: 1px solid $light;
      background-color: inherit;
    }
  }

  html[data-theme='dark'] .#{$color} {
    &,
    &.light {
      color: $dark;
      background-color: rgba($light, $alpha: 0.2);
    }

    &.filled {
      color: var(--background-default);
      background-color: $dark;
    }

    &.outline {
      border-color: $dark;
      background-color: rgba($light, $alpha: 0.04);
    }
  }
}

$n: -1;
@each $size in ('sm', 'md', 'lg') {
  $n: $n + 1;
  $rem125: 0.125rem * $n;
  $rem25: $rem125 * 2;
  $fs: 0.75rem + $rem125;
  .root.#{$size} {
    padding: 0.5rem + $rem25;
    font-size: $fs;
    border-radius: 0.25rem;

    & .icon {
      font-size: 0.875rem + $rem125;
    }
    & .body {
      gap: 0.75rem + $rem25;
    }
    & .title {
      margin-bottom: 0.375rem + $rem125;
    }
  }
}

.body {
  display: flex;
}
.title {
  display: flex;
  align-items: center;
  font-weight: bold;
}
.close {
  margin-left: auto;
  color: var(--gray-600);
  cursor: pointer;
}
.close:hover {
  filter: brightness(99%);
}
.close:active {
  transform: translateY(1px);
}
.container {
  flex: 1 1 0;
}
.content {
  color: var(--text-primary);
}
.icon {
  display: inline-block;
  height: fit-content;
  line-height: 1;
}

html[data-theme='dark'] .close {
  color: var(--text-primary);
}
